/**
 * Base
 */

@import "base/reset";

/**
 * Components
 */

@import "components/sample";



.wrapper{
  display: flex;
  flex-flow: column wrap;
  margin: 0 auto;
  width: 960px;

  header, footer{
    background-color: rgb(0,0,0);
    color: rgb(255,255,255);
    height: 75px;
  }

  nav{
    display: none;
  }

  main{
    background-color: lighten(rgb(0,255,0), 20%);
    height: 100px;
    position: relative;
  }

  aside{
    background-color: darken(rgb(0,255,0), 20%);
    height: 100px;
  }

}

///////////////// Exercise 1 ////////////////////
@mixin prefixTransition ($values...) {
  -webkit-transition: $values;
  -moz-transition: $values;
  -ms-transition: $values;
  -o-transition: $values;
  transition: $values;
}

.box1{
  background-color: rgb(255,0,0);
  height: 40px;
  position: absolute;
  width: 40px;
  top: 20px;
  left: 20px;

  ////////////////// Exercise 1 /////////////////////
  @include prefixTransition (left 1s ease-in-out 0ms);
}

.box1:hover{
  left: 300px;
}



////////////////// Exercise 2 ///////////////////
@mixin media ($medium) {
  @if $medium == 'tablet' {
    @media screen and (min-width: 688px) and (max-width: 960px) {@content;};
  } @else {
    @media screen and (min-width: 960px) {@content;};
  }
}


@include media('tablet') {
  // Styles für Tablet kommen hier rein
  .wrapper{
    header{
      order: 0;
    }

    nav{
      background-color: rgb(200,200,200);
      display: block;
      height: 50px;
      order: 1;
    }

    aside{
      order: 2;
    }

    main{
      order: 3;
    }

    footer{
      order: 4;
    }
  }
}


@include media('desktop') {
  // Styles für Desktop kommen hier rein
  .wrapper{
    display: flex;
    flex-flow: row wrap;

    header, footer{
      flex: 0 1 100%;
    }

    nav{
      background-color: rgb(200,200,200);
      display: block;
      flex: 0 1 100%;
      height: 50px;
    }

    main{
      flex: 7 7 70%;
    }

    aside{
      flex: 3 3 30%;
    }
  }
}



////////////////// Exercise 3 ///////////////////
// https://css- tricks.com/snippets/css/css-triangle/
@mixin triangle ($direction, $color, $size) {
  @if $direction == 'up' {
    border-bottom: $size solid $color;
    border-left: $size solid transparent;
    border-right: $size solid transparent;
  }
  @if $direction == 'down' {
    border-top: $size solid $color;
    border-left: $size solid transparent;
    border-right: $size solid transparent;
  }
  @if $direction == 'left' {
    border-right: $size solid $color;
    border-bottom: $size solid transparent;
    border-top: $size solid transparent;
  }
  @if $direction == 'right' {
    border-left: $size solid $color;
    border-bottom: $size solid transparent;
    border-top: $size solid transparent;
  }
  height: 0;
  width: 0;
}

.awesome-triangle1 {
  @include triangle(left, red, 30px);
  left: 200px;
  position: absolute;
}
.awesome-triangle2 {
  @include triangle(right, red, 30px);
  left: 290px;
  position: absolute;
}
.awesome-triangle3 {
  @include triangle(up, blue, 20px);
  left: 240px;
  position: absolute;
}
.awesome-triangle4 {
  @include triangle(down, blue, 20px);
  left: 240px;
  top: 60px;
  position: absolute;
}



////////////////// Exercise 4 ///////////////////
%clearfix {   //placeholder
  clear: both;
}

footer{
  .bottomText {
    @extend %clearfix;
    color: red;
  }

  .floatingBox{
    background-color: rgb(100,100,100);
    float: left;
    height: 30px;
    margin: 3px;
    text-align: center;
    width: 150px;
  }
}


